"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-client)/./components/room-model-optimized.tsx":
/*!*********************************************!*\
  !*** ./components/room-model-optimized.tsx ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RoomModel: function() { return /* binding */ RoomModel; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-client)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! three */ \"(app-client)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var three_examples_jsm_loaders_GLTFLoader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three/examples/jsm/loaders/GLTFLoader */ \"(app-client)/./node_modules/three/examples/jsm/loaders/GLTFLoader.js\");\n/* harmony import */ var three_examples_jsm_loaders_DRACOLoader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! three/examples/jsm/loaders/DRACOLoader */ \"(app-client)/./node_modules/three/examples/jsm/loaders/DRACOLoader.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-client)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _SceneInit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SceneInit */ \"(app-client)/./components/SceneInit.tsx\");\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! gsap */ \"(app-client)/./node_modules/gsap/index.js\");\n/* __next_internal_client_entry_do_not_use__ RoomModel auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\nconst RoomModel = ()=>{\n    _s();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const test = new _SceneInit__WEBPACK_IMPORTED_MODULE_2__[\"default\"](\"myThreeJsCanvas\");\n        test.initialize();\n        test.animate();\n        // initialize global variables\n        let camera = test.camera, scene = test.scene;\n        let model;\n        let mixer, mouse, raycaster;\n        let isHoveringOverMonitor, isHoveringOverAquarium, canZoomOut = false;\n        let savedPosition, targetPosition, currentPosition;\n        const canvas = document.getElementById(\"myThreeJsCanvas\");\n        const canvasContainer = document.getElementById(\"canvas-container\");\n        const loader = new three_examples_jsm_loaders_GLTFLoader__WEBPACK_IMPORTED_MODULE_3__.GLTFLoader();\n        // // Optional: Provide a DRACOLoader instance to decode compressed mesh data\n        // Specify path to a folder containing WASM/JS decoding libraries.\n        const dracoLoader = new three_examples_jsm_loaders_DRACOLoader__WEBPACK_IMPORTED_MODULE_4__.DRACOLoader();\n        dracoLoader.setDecoderPath(\"https://www.gstatic.com/draco/versioned/decoders/1.5.6/\");\n        dracoLoader.setDecoderConfig({\n            type: \"js\"\n        });\n        loader.setDRACOLoader(dracoLoader);\n        // const videoTexture1 = new THREE.VideoTexture( document.querySelector( '#video1' ) as HTMLVideoElement );\n        const videoTexture2 = new three__WEBPACK_IMPORTED_MODULE_5__.VideoTexture(document.querySelector(\"#video2\"));\n        // loader.load(\"/messy-room-model-compressed.glb\", (gltfScene) => { // 6.7 MB\n        loader.load(\"/clean-room-model.glb\", (gltfScene)=>{\n            model = gltfScene.scene;\n            // model.position.y = -1.7;\n            // Store references to materials\n            let aquariumGlassMaterial;\n            let monitorScreenMaterial;\n            let laptopScreenMaterial;\n            let computerScreenMaterial;\n            let monitorScreen = model.getObjectByName(\"Monitor_Screen\");\n            let aquariumScreen = model.getObjectByName(\"Aquarium_Glass001\");\n            model.traverse((child)=>{\n                if (child.name === \"Aquarium_Glass001\") {\n                    aquariumGlassMaterial = new three__WEBPACK_IMPORTED_MODULE_5__.MeshPhysicalMaterial({\n                        // roughness: 0,\n                        // color: '#80aeff',\n                        // transmission: 1,\n                        // opacity: 1,\n                        visible: false\n                    });\n                    child.material = aquariumGlassMaterial;\n                } else if (child.name === \"Monitor_Screen\" || child.name === \"Laptop_Screen\") {\n                    monitorScreenMaterial = new three__WEBPACK_IMPORTED_MODULE_5__.MeshBasicMaterial({\n                        map: videoTexture2\n                    });\n                    monitorScreenMaterial.map.encoding = three__WEBPACK_IMPORTED_MODULE_5__.sRGBEncoding;\n                    child.material = monitorScreenMaterial;\n                } else if (child.name === \"Computer_Screen\") {\n                    computerScreenMaterial = new three__WEBPACK_IMPORTED_MODULE_5__.MeshBasicMaterial({\n                        map: videoTexture2\n                    });\n                    computerScreenMaterial.map.encoding = three__WEBPACK_IMPORTED_MODULE_5__.sRGBEncoding;\n                    child.material = computerScreenMaterial;\n                }\n                // can't apply shadows to ambient or directional lights\n                if (child.isObject3D && !child.isLight) {\n                    child.castShadow = true;\n                    child.receiveShadow = true;\n                }\n            });\n            mouse = new three__WEBPACK_IMPORTED_MODULE_5__.Vector2();\n            raycaster = new three__WEBPACK_IMPORTED_MODULE_5__.Raycaster();\n            const onMouseMove = (event)=>{\n                // calculate pointer position in normalized device coordinates\n                // (-1 to +1) for both components\n                const canvasContainer = document.getElementById(\"canvas-container\");\n                let rect = canvasContainer.getBoundingClientRect();\n                // Don't change these numbers, it took ages to figure out these exact equations\n                // mouse.x = ((event.clientX - rect.left) / (rect.width)) * 1.42 - 1;\n                // mouse.y = -((event.clientY - rect.top) / (rect.height)) * 2 + 1;\n                mouse.x = (event.clientX - rect.left) / rect.width * 1.42 - 0.71;\n                mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n                // update raycaster with the new mouse position\n                raycaster.setFromCamera(mouse, camera);\n                // Intersects objects in the scene with the raycaster\n                const intersects = raycaster.intersectObjects(model.children);\n                // if (intersects.length) {\n                //   console.log(intersects[0].object.name)\n                // }\n                if (intersects.length > 0) {\n                    canvasContainer.style.cursor = \"pointer\";\n                } else {\n                    canvasContainer.style.cursor = \"\";\n                }\n            };\n            const onMouseClick = ()=>{\n                if (savedPosition) {\n                    currentPosition = savedPosition;\n                } else {\n                    currentPosition = camera.position;\n                }\n                if (canZoomOut) {\n                    targetPosition = new three__WEBPACK_IMPORTED_MODULE_5__.Vector3(6.8, 4.5, 8.0);\n                    // Start the GSAP animation to move the camera to the target position\n                    gsap__WEBPACK_IMPORTED_MODULE_6__.gsap.to(currentPosition, {\n                        x: targetPosition.x,\n                        y: targetPosition.y,\n                        z: targetPosition.z,\n                        duration: 3,\n                        ease: \"power2.out\",\n                        onUpdate: ()=>{\n                            camera.position.copy(currentPosition);\n                        },\n                        onComplete: ()=>{\n                            // This callback is executed after the camera movement is complete\n                            canZoomOut = false;\n                            console.log(\"finished camera movement!\");\n                        }\n                    });\n                } else {\n                    targetPosition = new three__WEBPACK_IMPORTED_MODULE_5__.Vector3(0.5, 0.5, 1.5);\n                    // targetPosition = new THREE.Vector3(5, 10, 5);\n                    savedPosition = camera.position;\n                    // Start the GSAP animation to move the camera to the target position\n                    gsap__WEBPACK_IMPORTED_MODULE_6__.gsap.to(savedPosition, {\n                        x: targetPosition.x,\n                        y: targetPosition.y,\n                        z: targetPosition.z,\n                        duration: 3,\n                        ease: \"power2.out\",\n                        onUpdate: ()=>{\n                            camera.position.copy(currentPosition);\n                        // camera.lookAt(aquariumScreen);\n                        },\n                        onComplete: ()=>{\n                            canZoomOut = true;\n                            console.log(\"finished camera movement!\");\n                        }\n                    });\n                }\n            };\n            // rotate the model based on the position of cursor on the screen\n            const moveModel = (event)=>{\n                mouse.x = event.clientX / window.innerWidth * 2 - 1;\n                mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n                scene.rotation.y = mouse.x * 0.3;\n                if (!canZoomOut) {\n                    scene.rotation.z = mouse.y * 0.1;\n                    scene.rotation.x = mouse.y * -0.1;\n                }\n            };\n            // canvasContainer.addEventListener('mousemove', onMouseMove);\n            canvasContainer.addEventListener(\"mousedown\", onMouseClick);\n            const aboutSection = document.querySelector(\"#about-section\");\n            aboutSection.addEventListener(\"mousemove\", moveModel);\n            const clickObject = document.querySelector(\"#click-object\");\n            clickObject.addEventListener(\"click\", ()=>{\n            // if (!canZoomOut) {\n            //   console.log('clicked on button');\n            //   // targetPosition = new THREE.Vector3(0.5, 0.5, 1);\n            //   targetPosition = new THREE.Vector3(0.5, 0.5, 1.5);\n            //   // targetPosition = new THREE.Vector3(0.3, 0.3, 1.2);\n            //   savedPosition = camera.position;\n            //   const tween = new TWEEN.Tween(savedPosition)\n            //   .to(targetPosition, 750)\n            //   .easing(TWEEN.Easing.Quadratic.Out)\n            //   .onUpdate(() => {\n            //     camera.position.copy(currentPosition);\n            //     // camera.lookAt(aquariumScreen);\n            //   })\n            //   .onComplete(() => {\n            //     canZoomOut = true;\n            //   })\n            //   .start();\n            // };\n            });\n            const ambientLight = new three__WEBPACK_IMPORTED_MODULE_5__.AmbientLight(0xC18E5A, 0.05);\n            const roomLight = new three__WEBPACK_IMPORTED_MODULE_5__.SpotLight(0xC18E5A);\n            const roomLightHelper = new three__WEBPACK_IMPORTED_MODULE_5__.SpotLightHelper(roomLight);\n            roomLight.position.set(0, 4.3, 0);\n            roomLight.intensity = 0.75;\n            // roomLight.castShadow = true;\n            // roomLight.receiveShadow = true;\n            // turning this on will increase shadow quality but reduce fps to 20-25 fps\n            // roomLight.shadow.mapSize.set(1024, 1024); \n            // roomLight.shadow.mapSize.set(512, 512); // 50-60 fps\n            // roomLight.shadow.mapSize.set(256, 256); // 60 fps\n            // roomLight.shadow.bias = -0.001\n            // adjust shadow bias carefully to remove those weird shadow stripe artifacts\n            // roomLight.shadow.normalBias = 0.1;\n            // roomLight.penumbra = 0.1; // how defined/shaded outer shadows are\n            // roomLight.lookAt(10, 1, 1);\n            const directionalLight = new three__WEBPACK_IMPORTED_MODULE_5__.DirectionalLight(0xC18E5A, 0.1);\n            directionalLight.position.set(0, 32, 64);\n            const directionalLightHelper = new three__WEBPACK_IMPORTED_MODULE_5__.DirectionalLightHelper(directionalLight);\n            const sunLight = new three__WEBPACK_IMPORTED_MODULE_5__.DirectionalLight(0xfdfbd3, 10);\n            sunLight.castShadow = true;\n            sunLight.receiveShadow = true;\n            sunLight.shadow.mapSize.set(512, 512);\n            sunLight.position.set(-3, 8, -10);\n            const aquariumLight = new three__WEBPACK_IMPORTED_MODULE_5__.RectAreaLight(0xF2B374, 20, 0.1, 1.1);\n            aquariumLight.position.set(-1.4, 1.51, -0.5); // x, z, -y\n            aquariumLight.lookAt(-1.4, -100, -0.5);\n            const deskLight = new three__WEBPACK_IMPORTED_MODULE_5__.RectAreaLight(0xF2B374, 40, 1.5, 0.1);\n            deskLight.position.set(-0.15, 0.77, -1.71); // x, z, -y\n            deskLight.lookAt(-0.153, 0.76, 100);\n            const lampLight = new three__WEBPACK_IMPORTED_MODULE_5__.SpotLight(0xF2B374);\n            lampLight.intensity = 0.5;\n            // lampLight.receiveShadow = true;\n            // lampLight.castShadow = true;\n            // lampLight.shadow.bias = -0.01;\n            // lampLight.shadow.normalBias = 0.1;\n            lampLight.position.set(1.4, 2.7, -1.4); // x, z, -y\n            lampLight.lookAt(5, 5, 5);\n            const ambientDayLight = new three__WEBPACK_IMPORTED_MODULE_5__.AmbientLight(0xfdfbd3, 0.35);\n            let today = new Date().getHours();\n            if (today >= 7 && today <= 18) {\n                model.add(roomLight, aquariumLight, deskLight, ambientDayLight, sunLight);\n            } else {\n                model.add(roomLight, aquariumLight, deskLight, ambientLight, directionalLight, lampLight);\n            }\n            scene.position.y = -1;\n            camera.position.set(6.8, 4.5, 8.0);\n            scene.add(model);\n            // to play animations\n            mixer = new three__WEBPACK_IMPORTED_MODULE_5__.AnimationMixer(model);\n            const animations = gltfScene.animations;\n            const goldFishAnimation = mixer.clipAction(animations[0]);\n            goldFishAnimation.play();\n            const clock = new three__WEBPACK_IMPORTED_MODULE_5__.Clock();\n            const animate = ()=>{\n                // anything in here gets called every frame\n                // if (model) {\n                //   model.rotation.x += 0.01;\n                //   model.rotation.y += 0.01;\n                //   model.rotation.z += 0.01;\n                // }\n                // labelRenderer.render(scene, camera);\n                mixer.update(clock.getDelta());\n                // TWEEN.update();\n                requestAnimationFrame(animate);\n            };\n            animate();\n        });\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n        id: \"myThreeJsCanvas\",\n        className: \"md:max-w-[800px] md:max-h-[800px] md:h-full md:w-full w-[100%] h-[100%]\"\n    }, void 0, false, {\n        fileName: \"/Users/saadsifar/Documents/Web Development/linear-portfolio/components/room-model-optimized.tsx\",\n        lineNumber: 291,\n        columnNumber: 5\n    }, undefined);\n};\n_s(RoomModel, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = RoomModel;\nvar _c;\n$RefreshReg$(_c, \"RoomModel\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-client)/./components/room-model-optimized.tsx\n"));

/***/ })

});